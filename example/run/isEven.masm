;; OBJECTIVE
;; Test the capabilities of the assembler
;; Writing the very first complex program
;; Asks for input and prints result based on wheather the input number is even or odd
;; We don't have call implemented yet but it works

.text:
proc main   

main:
  loop: ;; the event loop
    jmp ask_inp
  here:
    cmp Ma, -1 ;; the condition to quit
    je exit
    mod Ma, 2
    cmp Ma, 0 ;; check if even
    ;; cin Ma ;; remove the unnecessary '\n'  
    je print_even
    jmp print_odd

exit:
   hlt    

ask_inp:
  ;; print the ask_sym and ask for input
  mov Mc, sym_len
  sout ask_sym
  inq Ma ;; take input
  jmp here ;; that's all

print_even:
  mov Mc, is_even_len
  sout is_even
  jmp loop

print_odd:
  mov Mc, is_odd_len
  sout is_odd
  jmp loop

.data:
ask_sym: .string ">>> "
inp: resq 1 ;; reserve 1 qword for the input number
is_even: .string "The number is even.\n"
is_odd: .string "The number is odd.\n"

sym_len: db 4
is_even_len: db 20
is_odd_len: db 19

